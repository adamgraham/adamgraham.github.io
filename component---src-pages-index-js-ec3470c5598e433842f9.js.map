{"version":3,"file":"component---src-pages-index-js-ec3470c5598e433842f9.js","mappings":"0OAqEA,MA7DaA,KACX,MAAMC,GAAMC,EAAAA,EAAAA,UACNC,ECRD,SAAwBC,GAC7B,MAAMC,EAAUA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EACpB,MAAO,CACLC,MAAqC,QAAhCJ,EAAmB,QAAnBC,EAAEH,EAAUO,eAAO,IAAAJ,OAAA,EAAjBA,EAAmBK,mBAAW,IAAAN,EAAAA,EAAI,EACzCO,OAAuC,QAAjCL,EAAmB,QAAnBC,EAAEL,EAAUO,eAAO,IAAAF,OAAA,EAAjBA,EAAmBK,oBAAY,IAAAN,EAAAA,EAAI,EAC5C,GAGG,EAACL,EAAK,EAACY,IAAWC,EAAAA,EAAAA,UAASX,GAE3BY,EAAeA,KACnBF,EAAQV,IAAU,EAYpB,OATAa,EAAAA,EAAAA,YAAU,KACRC,OAAOC,iBAAiB,SAAUH,GAC3B,IAAME,OAAOE,oBAAoB,SAAUJ,KACjD,KAEHK,EAAAA,EAAAA,kBAAgB,KACdL,GAAc,GACb,IAEId,CACT,CDhBeoB,CAAetB,GACtBuB,GEXcC,EFWqB,GAApBN,OAAOO,WAAoBvB,EAAKO,MEX1BiB,EFWiC,EEX5BC,EFW+B,MEVxDC,KAAKF,IAAIE,KAAKD,IAAIH,EAAOE,GAAMC,IADjC,IAAeH,EAAOE,EAAKC,EFYhC,OACEE,EAAAA,cAACC,EAAAA,GAAI,CACHC,GAAG,QACHC,SAAU,CACRC,IAAKC,EAAAA,GACLC,MAAO,2BAETC,gBAAc,GAEdP,EAAAA,cAAA,OAAKQ,UAAU,SACbR,EAAAA,cAAA,OACEQ,UAAU,4BACVrC,IAAKA,EACLsC,MAAO,CAAEC,UAAW,SAAShB,OAE7BM,EAAAA,cAAA,KAAGQ,UAAU,sBAAqB,wBAClCR,EAAAA,cAAA,MAAIS,MAAO,CAAEE,WAAY,MAAO,eAChCX,EAAAA,cAAA,KAAGQ,UAAU,yCAAwC,8SAOrDR,EAAAA,cAACY,EAAAA,GAAW,KACVZ,EAAAA,cAACa,EAAAA,GAAI,CACHC,YAAaC,EAAAA,KACbC,GAAG,SACHP,MAAO,CAAEQ,WAAY,QACrBC,UAAQ,GAERlB,EAAAA,cAACmB,EAAAA,GAAM,CACLX,UAAU,gBACVnC,KAAM8C,EAAAA,GAAO9C,KAAK+C,MAClBC,MAAOF,EAAAA,GAAOE,MAAMC,SACrB,iBAIHtB,EAAAA,cAACa,EAAAA,GAAI,CAACU,UAAQ,EAACC,KAAMC,EAAAA,EAAQP,UAAQ,GACnClB,EAAAA,cAACmB,EAAAA,GAAM,CACLX,UAAU,gBACVkB,KAAK,QACLC,SAAS,cACTtD,KAAM8C,EAAAA,GAAO9C,KAAK+C,MAClBC,MAAOF,EAAAA,GAAOE,MAAMC,SACrB,cAOJ,C","sources":["webpack://@adamgraham/portfolio/./src/pages/index.js","webpack://@adamgraham/portfolio/./src/hooks/useElementSize.js","webpack://@adamgraham/portfolio/./src/utils/clamp.js"],"sourcesContent":["import { Button, ButtonGroup, Link } from '@zigurous/react-components';\r\nimport { Link as GatsbyLink } from 'gatsby';\r\nimport React, { useRef } from 'react';\r\nimport { Page } from '../components';\r\nimport { useElementSize } from '../hooks/useElementSize';\r\nimport { baseUri, resume } from '../links';\r\nimport { clamp } from '../utils/clamp';\r\n\r\nconst Home = () => {\r\n  const ref = useRef();\r\n  const size = useElementSize(ref);\r\n  const scale = clamp((window.innerWidth * 0.8) / size.width, 1, 1.309);\r\n  return (\r\n    <Page\r\n      id=\"cover\"\r\n      metadata={{\r\n        url: baseUri,\r\n        title: 'Adam Graham â€¢ Portfolio',\r\n      }}\r\n      hideNavigation\r\n    >\r\n      <div className=\"cover\">\r\n        <div\r\n          className=\"container-md introduction\"\r\n          ref={ref}\r\n          style={{ transform: `scale(${scale})` }}\r\n        >\r\n          <b className=\"h6 padding-left-sm\">Hello! ðŸ‘‹ My name is</b>\r\n          <h1 style={{ fontWeight: 700 }}>Adam Graham</h1>\r\n          <p className=\"font-sm margin-bottom-1em opacity-90p\">\r\n            I'm a software engineer and game developer inspired by the blending\r\n            of art, design, and engineering to create best in class user\r\n            experiences. I love working on design centric projects across web\r\n            and mobile having been a tech lead and UX engineer for many Fortune\r\n            500 clients over the past 10 years.\r\n          </p>\r\n          <ButtonGroup>\r\n            <Link\r\n              ElementType={GatsbyLink}\r\n              to=\"/games\"\r\n              style={{ marginLeft: '-4px' }}\r\n              unstyled\r\n            >\r\n              <Button\r\n                className=\"shadow-button\"\r\n                size={Button.size.small}\r\n                shape={Button.shape.rounded}\r\n              >\r\n                View Gallery\r\n              </Button>\r\n            </Link>\r\n            <Link external href={resume} unstyled>\r\n              <Button\r\n                className=\"shadow-button\"\r\n                icon=\"right\"\r\n                iconName=\"open_in_new\"\r\n                size={Button.size.small}\r\n                shape={Button.shape.rounded}\r\n              >\r\n                Resume\r\n              </Button>\r\n            </Link>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect, useLayoutEffect, useState } from 'react';\r\n\r\nexport function useElementSize(targetRef) {\r\n  const getSize = () => {\r\n    return {\r\n      width: targetRef.current?.offsetWidth ?? 0,\r\n      height: targetRef.current?.offsetHeight ?? 0,\r\n    };\r\n  };\r\n\r\n  const [size, setSize] = useState(getSize);\r\n\r\n  const handleResize = () => {\r\n    setSize(getSize());\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    handleResize();\r\n  }, []);\r\n\r\n  return size;\r\n}\r\n","export function clamp(value, min, max) {\r\n  return Math.min(Math.max(value, min), max);\r\n}\r\n"],"names":["Home","ref","useRef","size","targetRef","getSize","_targetRef$current$of","_targetRef$current","_targetRef$current$of2","_targetRef$current2","width","current","offsetWidth","height","offsetHeight","setSize","useState","handleResize","useEffect","window","addEventListener","removeEventListener","useLayoutEffect","useElementSize","scale","value","innerWidth","min","max","Math","React","Page","id","metadata","url","baseUri","title","hideNavigation","className","style","transform","fontWeight","ButtonGroup","Link","ElementType","GatsbyLink","to","marginLeft","unstyled","Button","small","shape","rounded","external","href","resume","icon","iconName"],"sourceRoot":""}