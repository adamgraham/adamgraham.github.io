{"version":3,"file":"component---src-pages-projects-js-0e60017ea32c3c14dce2.js","mappings":"mNASO,MAkBDA,EAAU,CAAC,QAAS,MAAO,QAAS,QAAS,KAAM,MAwHzD,UAtHiBC,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EAClC,MAAMG,GAASC,EAAAA,EAAAA,UAAQ,KACrB,MAAMC,EAAY,IAAIC,gBAAgBJ,aAAQ,EAARA,EAAUK,QAChD,OAAOF,EAAUG,IAAI,UAAYH,EAAUI,IAAI,UAAY,IAAI,GAC9D,CAACP,IAEEQ,GAAmBN,EAAAA,EAAAA,UAAQ,IAC1BD,EACEF,EAAKU,KAAKC,SACdC,KAAKC,IACG,CACLC,MAAOD,EAAQC,MACfC,SAAUF,EAAQE,SAASb,QAAQc,GACjCA,EAAQC,KAAKC,SAAShB,SAI3BA,QAAQW,GAAYA,EAAQE,SAASI,OAAS,IAV7BnB,EAAKU,KAAKC,UAW7B,CAACX,EAAME,IAEV,OACEkB,EAAAA,cAACC,EAAAA,GAAI,CACHC,GAAG,WAEHrB,SAAUA,EACVsB,SAAU,CACRC,IAAKC,EAAAA,GACLX,MAAO,2BAGTM,EAAAA,cAAA,WAASM,UAAU,8BACjBN,EAAAA,cAAA,OAAKM,UAAU,yBACbN,EAAAA,cAAA,MAAIM,UAAU,MAAK,YACnBN,EAAAA,cAAA,OAAKM,UAAU,0BACZ5B,EAAQc,KAAKe,GACZP,EAAAA,cAAA,UACEQ,QAASA,KACH1B,IAAWyB,GACbE,EAAAA,EAAAA,UAAS,GAAG5B,EAAS6B,WAAW7B,EAAS8B,OAAQ,CAC/CC,SAAS,KAGXH,EAAAA,EAAAA,UACE,GAAG5B,EAAS6B,WAAW7B,EAAS8B,eAAeJ,IAC/C,CACEK,SAAS,GAGf,EAEFC,IAAKN,GAELP,EAAAA,cAACc,EAAAA,GAAK,CACJR,UAAWS,IAAW,CAAE,kBAAmBjC,IAAWyB,IACtDS,MAAI,GAEHT,QAMVlB,EAAiBG,KAAKC,GACrBO,EAAAA,cAAA,WAASa,IAAKpB,EAAQC,OACpBM,EAAAA,cAAA,MAAIM,UAAU,MAAMb,EAAQC,OAC5BM,EAAAA,cAAA,UACGP,EAAQE,SAASH,KAAKI,GACrBI,EAAAA,cAACiB,EAAAA,GAAI,CACHC,YACEtB,EAAQuB,eAAiBvB,EAAQwB,KAAO,IAAMC,EAAAA,KAEhDC,SAAUC,QAAQ3B,EAAQuB,cAC1BN,IAAKjB,EAAQF,MACb8B,OAAO,SACPC,GAAI7B,EAAQuB,cAAgBvB,EAAQwB,KACpCM,UAAQ,GAER1B,EAAAA,cAAA,MAAIa,IAAKjB,EAAQF,OACfM,EAAAA,cAAA,OAAKM,UAAU,uBACbN,EAAAA,cAAA,QAAMM,UAAU,wBACbV,EAAQF,OAEXM,EAAAA,cAAA,QAAMM,UAAU,8BACbV,EAAQ+B,cAGb3B,EAAAA,cAAA,WACAA,EAAAA,cAAA,OAAKM,UAAU,uBAAuBV,EAAQgC,eAQvD,C","sources":["webpack://@adamgraham/portfolio/./src/pages/projects.js"],"sourcesContent":["import { Badge, Link } from '@zigurous/react-components';\r\nimport classNames from 'classnames';\r\nimport { graphql, Link as GatsbyLink, navigate } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useMemo } from 'react';\r\nimport { Page } from '../components';\r\nimport { baseUri } from '../links';\r\nimport '../styles/projects-list.css';\r\n\r\nexport const query = graphql`\r\n  query Projects {\r\n    json: allProjectsJson {\r\n      sections: nodes {\r\n        title\r\n        projects {\r\n          title\r\n          description\r\n          date\r\n          link\r\n          externalLink\r\n          tags\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst filters = ['React', 'iOS', 'Unity', 'VR/AR', '3D', '2D'];\r\n\r\nconst Projects = ({ data, location }) => {\r\n  const filter = useMemo(() => {\r\n    const urlParams = new URLSearchParams(location?.search);\r\n    return urlParams.has('filter') ? urlParams.get('filter') : null;\r\n  }, [location]);\r\n\r\n  const filteredSections = useMemo(() => {\r\n    if (!filter) return data.json.sections;\r\n    return data.json.sections\r\n      .map((section) => {\r\n        return {\r\n          title: section.title,\r\n          projects: section.projects.filter((project) =>\r\n            project.tags.includes(filter)\r\n          ),\r\n        };\r\n      })\r\n      .filter((section) => section.projects.length > 0);\r\n  }, [data, filter]);\r\n\r\n  return (\r\n    <Page\r\n      id=\"projects\"\r\n      // hideHeader\r\n      location={location}\r\n      metadata={{\r\n        url: baseUri,\r\n        title: 'Adam Graham â€¢ Projects',\r\n      }}\r\n    >\r\n      <article className=\"projects-list container-lg\">\r\n        <div className=\"projects-list__header\">\r\n          <h1 className=\"h2\">Projects</h1>\r\n          <div className=\"projects-list__filters\">\r\n            {filters.map((tag) => (\r\n              <button\r\n                onClick={() => {\r\n                  if (filter === tag) {\r\n                    navigate(`${location.pathname}${location.hash}`, {\r\n                      replace: true,\r\n                    });\r\n                  } else {\r\n                    navigate(\r\n                      `${location.pathname}${location.hash}?filter=${tag}`,\r\n                      {\r\n                        replace: true,\r\n                      }\r\n                    );\r\n                  }\r\n                }}\r\n                key={tag}\r\n              >\r\n                <Badge\r\n                  className={classNames({ 'badge--selected': filter === tag })}\r\n                  pill\r\n                >\r\n                  {tag}\r\n                </Badge>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {filteredSections.map((section) => (\r\n          <section key={section.title}>\r\n            <h2 className=\"h6\">{section.title}</h2>\r\n            <ul>\r\n              {section.projects.map((project) => (\r\n                <Link\r\n                  ElementType={\r\n                    project.externalLink || !project.link ? 'a' : GatsbyLink\r\n                  }\r\n                  external={Boolean(project.externalLink)}\r\n                  key={project.title}\r\n                  target=\"_blank\"\r\n                  to={project.externalLink || project.link}\r\n                  unstyled\r\n                >\r\n                  <li key={project.title}>\r\n                    <div className=\"projects-list__text\">\r\n                      <span className=\"projects-list__title\">\r\n                        {project.title}\r\n                      </span>\r\n                      <span className=\"projects-list__description\">\r\n                        {project.description}\r\n                      </span>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"projects-list__date\">{project.date}</div>\r\n                  </li>\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        ))}\r\n      </article>\r\n    </Page>\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  data: PropTypes.shape({\r\n    json: PropTypes.shape({\r\n      title: PropTypes.string,\r\n      Projects: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          title: PropTypes.string,\r\n          description: PropTypes.string,\r\n          date: PropTypes.string,\r\n          link: PropTypes.string,\r\n          externalLink: PropTypes.string,\r\n          tags: PropTypes.arrayOf(PropTypes.string),\r\n        })\r\n      ),\r\n    }),\r\n  }),\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["filters","_ref","data","location","filter","useMemo","urlParams","URLSearchParams","search","has","get","filteredSections","json","sections","map","section","title","projects","project","tags","includes","length","React","Page","id","metadata","url","baseUri","className","tag","onClick","navigate","pathname","hash","replace","key","Badge","classNames","pill","Link","ElementType","externalLink","link","GatsbyLink","external","Boolean","target","to","unstyled","description","date"],"sourceRoot":""}